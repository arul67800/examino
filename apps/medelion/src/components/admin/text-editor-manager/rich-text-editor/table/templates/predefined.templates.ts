import { TableTemplate, TemplateCategory, TemplateSize, TemplateComplexity } from '../types';\nimport { CellDataType } from '../types/table.types';\n\n// Basic Templates\nexport const basicTableTemplate: TableTemplate = {\n  id: 'basic-table',\n  name: 'Basic Table',\n  description: 'A simple table for general data entry and display',\n  category: 'business' as TemplateCategory,\n  tags: ['basic', 'simple', 'data'],\n  size: 'small' as TemplateSize,\n  complexity: 'simple' as TemplateComplexity,\n  \n  thumbnail: '/templates/basic-table.png',\n  icon: 'Table',\n  color: '#3B82F6',\n  \n  dimensions: {\n    rows: 5,\n    columns: 4,\n    minRows: 2,\n    maxRows: 1000,\n    minColumns: 2,\n    maxColumns: 50\n  },\n  \n  columns: [\n    {\n      name: 'ID',\n      type: 'number' as CellDataType,\n      width: 80,\n      format: { type: 'number', number: { style: 'decimal' } },\n      validation: { rules: [{ type: 'required', message: 'ID is required', severity: 'error', rule: {} }] },\n      unique: true,\n      autoIncrement: true\n    },\n    {\n      name: 'Name',\n      type: 'text' as CellDataType,\n      width: 150,\n      format: { type: 'text', text: { case: 'title' } },\n      validation: { rules: [{ type: 'required', message: 'Name is required', severity: 'error', rule: {} }] },\n      required: true\n    },\n    {\n      name: 'Category',\n      type: 'text' as CellDataType,\n      width: 120,\n      format: { type: 'text' }\n    },\n    {\n      name: 'Status',\n      type: 'text' as CellDataType,\n      width: 100,\n      format: { type: 'text' }\n    }\n  ],\n  \n  style: {\n    table: {\n      backgroundColor: '#FFFFFF',\n      borders: {\n        outer: { width: 1, style: 'solid', color: '#E5E7EB' }\n      }\n    },\n    header: {\n      backgroundColor: '#F9FAFB',\n      fontWeight: 'bold',\n      borders: {\n        bottom: { width: 2, style: 'solid', color: '#D1D5DB' }\n      }\n    },\n    body: {\n      backgroundColor: '#FFFFFF'\n    },\n    alternateRows: {\n      backgroundColor: '#F9FAFB'\n    }\n  },\n  \n  settings: {\n    showHeaders: true,\n    showRowNumbers: true,\n    alternateRowColors: true,\n    sortable: true,\n    filterable: true,\n    resizable: true,\n    selectable: 'multiple'\n  },\n  \n  data: {\n    sampleRows: [\n      [1, 'Sample Item 1', 'Category A', 'Active'],\n      [2, 'Sample Item 2', 'Category B', 'Inactive'],\n      [3, 'Sample Item 3', 'Category A', 'Pending']\n    ]\n  },\n  \n  metadata: {\n    author: 'Examino Team',\n    version: '1.0.0',\n    created: new Date('2024-01-01'),\n    updated: new Date('2024-01-01'),\n    license: 'MIT',\n    popularity: 95,\n    rating: 4.8,\n    featured: true\n  },\n  \n  features: {\n    formulas: false,\n    validation: true,\n    charts: false,\n    filters: true,\n    sorting: true,\n    grouping: false,\n    pivoting: false,\n    conditional: false,\n    automation: false,\n    collaboration: false\n  },\n  \n  customizable: {\n    columns: true,\n    rows: true,\n    styling: true,\n    validation: true,\n    formulas: false,\n    data: true\n  }\n};\n\n// Financial Templates\nexport const budgetPlannerTemplate: TableTemplate = {\n  id: 'budget-planner',\n  name: 'Budget Planner',\n  description: 'Comprehensive budget tracking with income, expenses, and calculations',\n  category: 'financial' as TemplateCategory,\n  tags: ['budget', 'finance', 'money', 'planning'],\n  size: 'medium' as TemplateSize,\n  complexity: 'intermediate' as TemplateComplexity,\n  \n  thumbnail: '/templates/budget-planner.png',\n  icon: 'DollarSign',\n  color: '#10B981',\n  \n  dimensions: {\n    rows: 15,\n    columns: 6,\n    minRows: 10,\n    maxRows: 100,\n    minColumns: 4,\n    maxColumns: 12\n  },\n  \n  columns: [\n    {\n      name: 'Category',\n      type: 'text' as CellDataType,\n      width: 150,\n      format: { type: 'text', text: { case: 'title' } },\n      validation: { rules: [{ type: 'required', message: 'Category is required', severity: 'error', rule: {} }] }\n    },\n    {\n      name: 'Description',\n      type: 'text' as CellDataType,\n      width: 200,\n      format: { type: 'text' }\n    },\n    {\n      name: 'Budgeted',\n      type: 'currency' as CellDataType,\n      width: 120,\n      format: { type: 'currency', number: { style: 'currency', currency: 'USD' } },\n      validation: { rules: [{ type: 'number', message: 'Must be a valid amount', severity: 'error', rule: { min: 0 } }] }\n    },\n    {\n      name: 'Actual',\n      type: 'currency' as CellDataType,\n      width: 120,\n      format: { type: 'currency', number: { style: 'currency', currency: 'USD' } },\n      validation: { rules: [{ type: 'number', message: 'Must be a valid amount', severity: 'error', rule: { min: 0 } }] }\n    },\n    {\n      name: 'Difference',\n      type: 'currency' as CellDataType,\n      width: 120,\n      format: { type: 'currency', number: { style: 'currency', currency: 'USD' } }\n    },\n    {\n      name: 'Percentage',\n      type: 'percentage' as CellDataType,\n      width: 100,\n      format: { type: 'percentage', number: { style: 'percent', maximumFractionDigits: 1 } }\n    }\n  ],\n  \n  style: {\n    table: {\n      backgroundColor: '#FFFFFF',\n      borders: {\n        outer: { width: 2, style: 'solid', color: '#10B981' }\n      }\n    },\n    header: {\n      backgroundColor: '#10B981',\n      color: '#FFFFFF',\n      fontWeight: 'bold',\n      textAlign: 'center'\n    },\n    body: {\n      backgroundColor: '#FFFFFF'\n    },\n    alternateRows: {\n      backgroundColor: '#F0FDF4'\n    }\n  },\n  \n  settings: {\n    showHeaders: true,\n    showRowNumbers: false,\n    alternateRowColors: true,\n    sortable: true,\n    filterable: true,\n    resizable: true,\n    selectable: 'multiple'\n  },\n  \n  data: {\n    sampleRows: [\n      ['Housing', 'Rent/Mortgage', 1500, 1500, 0, 100],\n      ['Food', 'Groceries', 400, 450, -50, 112.5],\n      ['Transportation', 'Gas & Car Payment', 300, 280, 20, 93.3],\n      ['Utilities', 'Electric, Water, Internet', 200, 220, -20, 110],\n      ['Entertainment', 'Movies, Dining Out', 150, 180, -30, 120]\n    ],\n    formulas: {\n      'E2': '=D2-C2',  // Difference = Actual - Budgeted\n      'F2': '=D2/C2*100'  // Percentage = Actual/Budgeted * 100\n    }\n  },\n  \n  metadata: {\n    author: 'Finance Team',\n    version: '2.1.0',\n    created: new Date('2024-01-15'),\n    updated: new Date('2024-02-01'),\n    license: 'MIT',\n    popularity: 88,\n    rating: 4.6,\n    featured: true\n  },\n  \n  features: {\n    formulas: true,\n    validation: true,\n    charts: true,\n    filters: true,\n    sorting: true,\n    grouping: true,\n    pivoting: false,\n    conditional: true,\n    automation: false,\n    collaboration: false\n  },\n  \n  customizable: {\n    columns: true,\n    rows: true,\n    styling: true,\n    validation: true,\n    formulas: true,\n    data: true\n  }\n};\n\n// Academic Templates\nexport const gradebookTemplate: TableTemplate = {\n  id: 'gradebook',\n  name: 'Student Gradebook',\n  description: 'Track student grades, assignments, and calculate final scores',\n  category: 'academic' as TemplateCategory,\n  tags: ['grades', 'students', 'education', 'scores'],\n  size: 'large' as TemplateSize,\n  complexity: 'advanced' as TemplateComplexity,\n  \n  thumbnail: '/templates/gradebook.png',\n  icon: 'GraduationCap',\n  color: '#8B5CF6',\n  \n  dimensions: {\n    rows: 25,\n    columns: 8,\n    minRows: 5,\n    maxRows: 500,\n    minColumns: 5,\n    maxColumns: 20\n  },\n  \n  columns: [\n    {\n      name: 'Student ID',\n      type: 'text' as CellDataType,\n      width: 100,\n      format: { type: 'text' },\n      validation: { rules: [{ type: 'required', message: 'Student ID is required', severity: 'error', rule: {} }] },\n      unique: true\n    },\n    {\n      name: 'Student Name',\n      type: 'text' as CellDataType,\n      width: 180,\n      format: { type: 'text', text: { case: 'title' } },\n      validation: { rules: [{ type: 'required', message: 'Name is required', severity: 'error', rule: {} }] }\n    },\n    {\n      name: 'Assignment 1',\n      type: 'number' as CellDataType,\n      width: 100,\n      format: { type: 'number', number: { maximumFractionDigits: 1 } },\n      validation: { rules: [{ type: 'range', message: 'Grade must be 0-100', severity: 'error', rule: { min: 0, max: 100 } }] }\n    },\n    {\n      name: 'Assignment 2',\n      type: 'number' as CellDataType,\n      width: 100,\n      format: { type: 'number', number: { maximumFractionDigits: 1 } },\n      validation: { rules: [{ type: 'range', message: 'Grade must be 0-100', severity: 'error', rule: { min: 0, max: 100 } }] }\n    },\n    {\n      name: 'Midterm',\n      type: 'number' as CellDataType,\n      width: 100,\n      format: { type: 'number', number: { maximumFractionDigits: 1 } },\n      validation: { rules: [{ type: 'range', message: 'Grade must be 0-100', severity: 'error', rule: { min: 0, max: 100 } }] }\n    },\n    {\n      name: 'Final Exam',\n      type: 'number' as CellDataType,\n      width: 100,\n      format: { type: 'number', number: { maximumFractionDigits: 1 } },\n      validation: { rules: [{ type: 'range', message: 'Grade must be 0-100', severity: 'error', rule: { min: 0, max: 100 } }] }\n    },\n    {\n      name: 'Final Grade',\n      type: 'number' as CellDataType,\n      width: 100,\n      format: { type: 'number', number: { maximumFractionDigits: 2 } }\n    },\n    {\n      name: 'Letter Grade',\n      type: 'text' as CellDataType,\n      width: 80,\n      format: { type: 'text' }\n    }\n  ],\n  \n  style: {\n    table: {\n      backgroundColor: '#FFFFFF',\n      borders: {\n        outer: { width: 2, style: 'solid', color: '#8B5CF6' }\n      }\n    },\n    header: {\n      backgroundColor: '#8B5CF6',\n      color: '#FFFFFF',\n      fontWeight: 'bold',\n      textAlign: 'center'\n    },\n    body: {\n      backgroundColor: '#FFFFFF'\n    },\n    alternateRows: {\n      backgroundColor: '#FAF5FF'\n    }\n  },\n  \n  settings: {\n    showHeaders: true,\n    showRowNumbers: true,\n    alternateRowColors: true,\n    sortable: true,\n    filterable: true,\n    resizable: true,\n    selectable: 'multiple'\n  },\n  \n  data: {\n    sampleRows: [\n      ['STU001', 'Alice Johnson', 95, 88, 92, 90, 90.75, 'A'],\n      ['STU002', 'Bob Smith', 78, 82, 80, 85, 81.25, 'B'],\n      ['STU003', 'Carol Davis', 92, 95, 88, 93, 92, 'A']\n    ],\n    formulas: {\n      'G2': '=(C2*0.2+D2*0.2+E2*0.3+F2*0.3)',  // Final Grade calculation\n      'H2': '=IF(G2>=90,\"A\",IF(G2>=80,\"B\",IF(G2>=70,\"C\",IF(G2>=60,\"D\",\"F\"))))'  // Letter Grade\n    }\n  },\n  \n  metadata: {\n    author: 'Education Team',\n    version: '3.0.0',\n    created: new Date('2024-01-20'),\n    updated: new Date('2024-02-10'),\n    license: 'MIT',\n    popularity: 76,\n    rating: 4.4,\n    featured: false\n  },\n  \n  features: {\n    formulas: true,\n    validation: true,\n    charts: true,\n    filters: true,\n    sorting: true,\n    grouping: true,\n    pivoting: true,\n    conditional: true,\n    automation: true,\n    collaboration: true\n  },\n  \n  customizable: {\n    columns: true,\n    rows: true,\n    styling: true,\n    validation: true,\n    formulas: true,\n    data: true\n  }\n};\n\n// Project Management Template\nexport const projectTrackerTemplate: TableTemplate = {\n  id: 'project-tracker',\n  name: 'Project Tracker',\n  description: 'Track project tasks, deadlines, and progress with team assignments',\n  category: 'project' as TemplateCategory,\n  tags: ['project', 'tasks', 'deadlines', 'team'],\n  size: 'large' as TemplateSize,\n  complexity: 'advanced' as TemplateComplexity,\n  \n  thumbnail: '/templates/project-tracker.png',\n  icon: 'CheckSquare',\n  color: '#F59E0B',\n  \n  dimensions: {\n    rows: 20,\n    columns: 9,\n    minRows: 5,\n    maxRows: 1000,\n    minColumns: 6,\n    maxColumns: 15\n  },\n  \n  columns: [\n    {\n      name: 'Task ID',\n      type: 'text' as CellDataType,\n      width: 80,\n      format: { type: 'text' },\n      validation: { rules: [{ type: 'required', message: 'Task ID is required', severity: 'error', rule: {} }] },\n      unique: true\n    },\n    {\n      name: 'Task Name',\n      type: 'text' as CellDataType,\n      width: 200,\n      format: { type: 'text' },\n      validation: { rules: [{ type: 'required', message: 'Task name is required', severity: 'error', rule: {} }] }\n    },\n    {\n      name: 'Assigned To',\n      type: 'text' as CellDataType,\n      width: 120,\n      format: { type: 'text', text: { case: 'title' } }\n    },\n    {\n      name: 'Priority',\n      type: 'text' as CellDataType,\n      width: 100,\n      format: { type: 'text' }\n    },\n    {\n      name: 'Status',\n      type: 'text' as CellDataType,\n      width: 120,\n      format: { type: 'text' }\n    },\n    {\n      name: 'Start Date',\n      type: 'date' as CellDataType,\n      width: 120,\n      format: { type: 'date', date: { dateStyle: 'short' } }\n    },\n    {\n      name: 'Due Date',\n      type: 'date' as CellDataType,\n      width: 120,\n      format: { type: 'date', date: { dateStyle: 'short' } }\n    },\n    {\n      name: 'Progress',\n      type: 'percentage' as CellDataType,\n      width: 100,\n      format: { type: 'percentage', number: { style: 'percent' } },\n      validation: { rules: [{ type: 'range', message: 'Progress must be 0-100%', severity: 'error', rule: { min: 0, max: 100 } }] }\n    },\n    {\n      name: 'Notes',\n      type: 'text' as CellDataType,\n      width: 200,\n      format: { type: 'text' }\n    }\n  ],\n  \n  style: {\n    table: {\n      backgroundColor: '#FFFFFF',\n      borders: {\n        outer: { width: 2, style: 'solid', color: '#F59E0B' }\n      }\n    },\n    header: {\n      backgroundColor: '#F59E0B',\n      color: '#FFFFFF',\n      fontWeight: 'bold',\n      textAlign: 'center'\n    },\n    body: {\n      backgroundColor: '#FFFFFF'\n    },\n    alternateRows: {\n      backgroundColor: '#FFFBEB'\n    }\n  },\n  \n  settings: {\n    showHeaders: true,\n    showRowNumbers: true,\n    alternateRowColors: true,\n    sortable: true,\n    filterable: true,\n    resizable: true,\n    selectable: 'multiple'\n  },\n  \n  data: {\n    sampleRows: [\n      ['TSK001', 'Design UI Mockups', 'Alice Johnson', 'High', 'In Progress', '2024-01-01', '2024-01-15', 75, 'Working on final revisions'],\n      ['TSK002', 'Backend API Development', 'Bob Smith', 'High', 'Not Started', '2024-01-10', '2024-01-25', 0, 'Waiting for requirements'],\n      ['TSK003', 'Database Schema', 'Carol Davis', 'Medium', 'Completed', '2024-01-01', '2024-01-08', 100, 'Schema finalized and deployed']\n    ]\n  },\n  \n  metadata: {\n    author: 'Project Team',\n    version: '2.5.0',\n    created: new Date('2024-01-25'),\n    updated: new Date('2024-02-15'),\n    license: 'MIT',\n    popularity: 82,\n    rating: 4.7,\n    featured: true\n  },\n  \n  features: {\n    formulas: false,\n    validation: true,\n    charts: true,\n    filters: true,\n    sorting: true,\n    grouping: true,\n    pivoting: false,\n    conditional: true,\n    automation: true,\n    collaboration: true\n  },\n  \n  customizable: {\n    columns: true,\n    rows: true,\n    styling: true,\n    validation: true,\n    formulas: false,\n    data: true\n  }\n};\n\n// Inventory Template\nexport const inventoryTemplate: TableTemplate = {\n  id: 'inventory-tracker',\n  name: 'Inventory Tracker',\n  description: 'Track product inventory, stock levels, and supplier information',\n  category: 'inventory' as TemplateCategory,\n  tags: ['inventory', 'stock', 'products', 'warehouse'],\n  size: 'medium' as TemplateSize,\n  complexity: 'intermediate' as TemplateComplexity,\n  \n  thumbnail: '/templates/inventory.png',\n  icon: 'Package',\n  color: '#EF4444',\n  \n  dimensions: {\n    rows: 12,\n    columns: 8,\n    minRows: 5,\n    maxRows: 5000,\n    minColumns: 5,\n    maxColumns: 15\n  },\n  \n  columns: [\n    {\n      name: 'SKU',\n      type: 'text' as CellDataType,\n      width: 100,\n      format: { type: 'text' },\n      validation: { rules: [{ type: 'required', message: 'SKU is required', severity: 'error', rule: {} }] },\n      unique: true\n    },\n    {\n      name: 'Product Name',\n      type: 'text' as CellDataType,\n      width: 200,\n      format: { type: 'text', text: { case: 'title' } },\n      validation: { rules: [{ type: 'required', message: 'Product name is required', severity: 'error', rule: {} }] }\n    },\n    {\n      name: 'Category',\n      type: 'text' as CellDataType,\n      width: 120,\n      format: { type: 'text' }\n    },\n    {\n      name: 'Current Stock',\n      type: 'number' as CellDataType,\n      width: 100,\n      format: { type: 'number', number: { style: 'decimal' } },\n      validation: { rules: [{ type: 'number', message: 'Must be a valid number', severity: 'error', rule: { min: 0 } }] }\n    },\n    {\n      name: 'Min Stock',\n      type: 'number' as CellDataType,\n      width: 100,\n      format: { type: 'number', number: { style: 'decimal' } },\n      validation: { rules: [{ type: 'number', message: 'Must be a valid number', severity: 'error', rule: { min: 0 } }] }\n    },\n    {\n      name: 'Unit Price',\n      type: 'currency' as CellDataType,\n      width: 100,\n      format: { type: 'currency', number: { style: 'currency', currency: 'USD' } },\n      validation: { rules: [{ type: 'number', message: 'Must be a valid price', severity: 'error', rule: { min: 0 } }] }\n    },\n    {\n      name: 'Supplier',\n      type: 'text' as CellDataType,\n      width: 150,\n      format: { type: 'text', text: { case: 'title' } }\n    },\n    {\n      name: 'Last Updated',\n      type: 'date' as CellDataType,\n      width: 120,\n      format: { type: 'date', date: { dateStyle: 'short' } }\n    }\n  ],\n  \n  style: {\n    table: {\n      backgroundColor: '#FFFFFF',\n      borders: {\n        outer: { width: 2, style: 'solid', color: '#EF4444' }\n      }\n    },\n    header: {\n      backgroundColor: '#EF4444',\n      color: '#FFFFFF',\n      fontWeight: 'bold',\n      textAlign: 'center'\n    },\n    body: {\n      backgroundColor: '#FFFFFF'\n    },\n    alternateRows: {\n      backgroundColor: '#FEF2F2'\n    }\n  },\n  \n  settings: {\n    showHeaders: true,\n    showRowNumbers: true,\n    alternateRowColors: true,\n    sortable: true,\n    filterable: true,\n    resizable: true,\n    selectable: 'multiple'\n  },\n  \n  data: {\n    sampleRows: [\n      ['SKU001', 'Wireless Headphones', 'Electronics', 45, 10, 99.99, 'TechSupplier Inc', '2024-02-01'],\n      ['SKU002', 'Coffee Mug', 'Kitchen', 120, 25, 12.99, 'Kitchen Plus', '2024-02-01'],\n      ['SKU003', 'Notebook Set', 'Office', 8, 15, 24.99, 'Office World', '2024-01-28']\n    ]\n  },\n  \n  metadata: {\n    author: 'Inventory Team',\n    version: '1.8.0',\n    created: new Date('2024-01-30'),\n    updated: new Date('2024-02-05'),\n    license: 'MIT',\n    popularity: 71,\n    rating: 4.3,\n    featured: false\n  },\n  \n  features: {\n    formulas: false,\n    validation: true,\n    charts: true,\n    filters: true,\n    sorting: true,\n    grouping: true,\n    pivoting: false,\n    conditional: true,\n    automation: true,\n    collaboration: false\n  },\n  \n  customizable: {\n    columns: true,\n    rows: true,\n    styling: true,\n    validation: true,\n    formulas: false,\n    data: true\n  }\n};\n\n// Export all templates\nexport const predefinedTemplates: TableTemplate[] = [\n  basicTableTemplate,\n  budgetPlannerTemplate,\n  gradebookTemplate,\n  projectTrackerTemplate,\n  inventoryTemplate\n];